openapi: 3.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: 'https://www.mycare-api/api/v1/'
info:
  version: 1.0.0
  title: Blockchain Api
  description: This is API spec for MyCare v1.0.0
security:
  - implicit:
      - read
      - write
tags:
  - name: TermsAndPolicies
    description: endpoints to interactwith PoliciesAndTerms smart Contract
  - name: MyCareContract
    description: endpoints to interact with Mycare smart contract
  - name: SharedAccess
    description: endpoints to interact with SharedAccess smart contract
paths:
  /user:
    post:
      tags: 
        - User
      summary: Admin user login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
  '/auth/client/{id}':
    get:
      tags: 
        - Auth
      summary: get clients list
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          schema:
            type: string
            format: uuid
            description: json web token gotten from login
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '404':
          description: Not found
        '500':
          description: Server Error
    delete:
      tags: 
        - Auth
      summary: deletes specified client
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          schema:
            type: string
            format: uuid
            description: json web token gotten from login
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
    put:
      tags: 
        - Auth
      summary: updates client
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          schema:
            type: string
            format: uuid
            description: json web token gotten from login
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: unique name for app /client
                  example: eob-API
                email:
                  type: string
                  description: contact email for this client
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '404':
          description: Not found
        '500':
          description: Server Error
  '/auth/clients':
    get:
      tags: 
        - Auth
      summary: get clients list
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            format: uuid
            description: json web token gotten from login
          required: true
        - in: header
          name: startFrom
          schema:
            type: number
            example: 1
            description: defines an offset for the result
        - in: header
          name: limitTo
          schema:
            type: number
            example: 100
            description: defines how large the results shoud be
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
        '404':
          description: Not found
        '500':
          description: Server Error
  '/auth/new_client':
    post:
      tags: 
        - Auth
      summary: create new client
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            format: uuid
            description: json web token gotten from login
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: unique name for app /client
                  example: eob-API
                email:
                  type: string
                  description: contact email for this client
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '404':
          description: Not found
        '500':
          description: Server Error

  /auth:
    post:
      tags: 
        - Auth
      summary: Get access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientId:
                  type: string
                clientSecret:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
    get:
      tags: 
        - Auth
      summary: Check if access token is still valid
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            format: uuid
            description: json web token gotten from login
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
      
  '/share/connection/{connectionId}':
    get:
      tags:
        - SharedAccess
      summary: Get saved consent
      description: Get saved consent
      parameters: 
        - in: path
          name: connectionId
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          schema:
            type: string
            format: uuid
            description: access token
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConnection'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
  '/share/connection':
    put:
      tags:
        - SharedAccess
      summary: Update connection attempt with acceptance or rejection
      description: Update connection attempt with acceptance or rejection
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            format: uuid
            description: access token
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConnection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateConnection'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
    post:
      tags:
        - SharedAccess
      summary: Save connection attempt to the chain
      description: Save connection attempt to the chain
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            format: uuid
            description: access token
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddConnection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddConnection'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
  '/share/can_access/{consentId}':
    get:
      tags:
        - SharedAccess
      summary: Check if viewer has permission to access data
      description: Check if viewer has permission to access data
      parameters: 
        - in: path
          name: consentId
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          schema:
            type: string
            format: uuid
            description: access token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  revoked:
                    type: boolean
                    example: true
        '400':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
  '/share/revoke_consent':
    put:
      tags:
        - SharedAccess
      summary: Revoke consent
      description: Revoke consent
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            format: uuid
            description: access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeConsent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RevokeConsent'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
  '/share/consent':
    get:
      tags:
        - SharedAccess
      summary: Get saved consent
      description: Get saved consent
      parameters: 
        - in: query
          name: consentId
          schema:
            type: string
        - in: query
          name: scope
          schema:
            type: array
            items:
              type: string
        - in: header
          name: Authorization
          schema:
            type: string
            format: uuid
            description: access token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedConsent'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
  '/share/add_consent':
    post:
      tags:
        - SharedAccess
      summary: Save new consent to the chain
      description: Save new consent to the chain
      parameters: 
        - in: header
          name: Authorization
          schema:
            type: string
            format: uuid
            description: access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddConsent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddConsent'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
  '/terms_and_policies/acceptance':
    get:
      tags:
        - TermsAndPolicies
      summary: Get saved user acceptance of terms and policies
      description: Get saved user acceptance of terms and policies
      parameters: 
        - in: query
          name: walletAddress
          schema:
            type: string
            description: account wallet address
            example: "0x23ff33sd8ace82c72f82c28e82addecf23795fc"
        - in: query
          name: documentHash
          schema:
            type: string
            description: terms and policy document hash
            example: "282yg82gs3ed83h9nd93die93nd3ndemdudnndu3jdjd3ndeednu27d"
        - in: header
          name: Authorization
          schema:
            type: string
            format: uuid
            description: access token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedPATAcceptance'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
  '/terms_and_policies/add_acceptance':
    post:
      tags:
        - TermsAndPolicies
      summary: Save user acceptance of terms and policies to the chain
      description: Save user acceptance of terms and policies to the chain
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            format: uuid
            description: access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATAcceptance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PATAcceptance'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
  '/terms_and_policies/document/{documentHash}':
    get:
      tags:
        - TermsAndPolicies
      summary: get saved policy and terms document
      description: get saved policy and terms document
      parameters:
        - in: path
          required: true
          name: documentHash
          description: ipfsHash of the document
          schema:
            type: string
        - in: header
          name: Authorization
          schema:
            type: string
            format: uuid
            description: access token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedPATdocument'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
  '/terms_and_policies/add_document':
    post:
      tags:
        - TermsAndPolicies
      summary: Save new policies and terms document to chain
      description: Save new policies and terms document to chain
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            format: uuid
            description: access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATdocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PATdocument'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
  '/mycare/add_account':
    post:
      tags:
        - MyCareContract
      summary: Save new user account to the blockchain
      description: Save new user account to the blockchain
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            format: uuid
            description: access token
      requestBody:
        description: Required data to save new account
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NewAccount'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
  '/mycare/add_account_type':
    post:
      tags:
        - MyCareContract
      summary: Create new account type on the blockchain
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            format: uuid
            description: access token
      requestBody:
        description: Required data to save new account
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountType:
                  type: string
                  example: Patient
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
  '/mycare/deactivate_account':
    put:
      tags:
        - MyCareContract
      summary: flag saved user account as inactive
      description: flag saved user profile as inactive
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            format: uuid
            description: access token
      requestBody:
        description: Required data to save new account
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeactivateAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeactivateAccount'
      responses:
        '200':
          description: OK
        '400':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
  '/mycare/account':
    get:
      tags:
        - MyCareContract
      summary: Get account by wallet address or profile hash
      description: Get account by wallet address or profile hash
      parameters: 
        - in: query
          name: walletAddress
          required: false
          schema:
            type: string
            description: account wallet address
            example: "0x23ff33sd8ace82c72f82c28e82addecf23795fc"
        - in: query
          name: profileHash
          required: false
          schema:
            type: string
            description: account profile hash
            example: "282yg82gs3ed83h9nd93die93nd3ndemdudnndu3jdjd3ndeednu27d"
        - in: header
          name: Authorization
          schema:
            type: string
            format: uuid
            description: access token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
  '/generate_chain_account':
    get:
      tags: 
        - MyCareContract
      summary: Generate new chain account
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            format: uuid
            description: access token
      description: Generate new chain account
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChainAccount'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
  '/mycare/account_count':
    get:
      tags:
        - MyCareContract
      summary: Get total number of saved accounts
      description: Get total number of saved accounts
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            format: uuid
            description: access token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCount'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
          
components:
  schemas:
    RevokeConsent:
      type: object
      properties:
        consentId:
          type: string
        timestamp:
          type: string
          example: "2018-11-28T14:23:28.233Z"
    GetConnection:
      type: object
      properties:
        created:
          type: number
          example: 1542808796218
        updated:
          type: number
          example: 1542808796218
        from:
          type: string
        to:
          type: string
        connectionId:
          type: string
        accepted:
          type: boolean
    UpdateConnection:
      type: object
      properties:
        timestamp:
          type: string
          example: "2018-11-28T08:44:00.076Z"
        accepted:
          type: boolean
        connectionId:
          type: string
    AddConnection:
      type: object
      properties:
        created:
          type: string
          example: "2018-11-28T08:44:00.076Z"
        from:
          type: string
        to:
          type: string
        connectionId:
          type: string
    SavedConsent:
      type: object
      properties:
        created:
          type: number
          example: "2018-12-09T21:02:03.110Z"
        updated:
          type: number
          example: "2018-12-09T21:02:03.110Z"
        scope:
          type: array
          items:
            type: string
            example: "Procedure"
        dataSource:
          type: array
          items:
            type: string
            example: "0x5EF18be6e742c63AA2Dab7F52C1B699040875808"
        startDate:
          type: string
          example: "2018-12-09T21:02:03.110Z"
        endDate:
          type: string
          example: "2018-12-09T21:02:03.110Z"
        consentId:
          type: string
        connectionId:
          type: string
        revoked:
          type: boolean
          example: false
    AddConsent:
      type: object
      properties:
        timestamp:
          type: string
          example: "2018-11-28T13:01:04.956Z"
        scope:
          type: array
          items:
            type: string
            example: "Procedure"
        dataSource:
          type: array
          items:
            type: string
            example: "0x5EF18be6e742c63AA2Dab7F52C1B699040875808"
        startDate:
          type: string
          example: "2018-11-28T13:01:04.956Z"
        endDate:
          type: string
          example: "2018-11-28T13:01:04.956Z"
        consentId:
          type: string
        connectionId:
          type: string
    SavedPATAcceptance:
      type: object
      properties:
        timestamp:
          type: string
          example: "2018-11-21T13:22:48.069Z"
        documentHash:
          type: string
          description: ipfs hash of document
    PATAcceptance:
      type: object
      properties:
        walletAddress:
          type: string
          example: "0x34ff3cc39ds0d93cabcdaef2ea39c"
        timestamp:
          type: string
          example: "2018-11-21T13:22:48.069Z"
        documentHash:
          type: string
          description: ipfs hash of document
    SavedPATdocument:
      type: object
      properties:
        timestamp:
          type: number
          example: "2018-11-21T13:22:48.069Z"
        ipfsHash:
          type: string
          description: ipfs hash of document
    PATdocument:
      type: object
      properties:
        ipfsHash:
          type: string
          description: ipfs hash of document
    Account:
      type: object
      properties:
        profile:
          type: string
          description: profile hash
          example: "282yg82gs3ed83h9nd93die93nd3ndemdudnndu3jdjd3ndeednu27d"
        walletAddress:
          type: string
          example: "0x23ff33sd8ace82c72f82c28e82addecf23795fc"
        timestamp:
          type: string
          description: timestamp showing when account was created
          example: "2018-11-21T11:26:34.142Z"
        active:
          type: boolean
          description: flag to indicating is account is deactivated or not
          example: false
    ChainAccount:
      type: object
      properties:
        walletAddress:
          type: string
        walletPrivateKey:
          type: string
        rsaPublicKey:
          type: string
        rsaPassPhrase:
          type: string
    AccountCount:
      type: object
      properties:
        count: 
          type: number
          example: 345
    DeactivateAccount:
      type: object
      properties:
        walletAddress:
          type: string
          description: account's wallet address
          example: "0x23ff33sd8ace82c72f82c28e82addecf23795fc"
        timestamp:
          type: string
          description: timestamp showing when account was created
          example: "2018-11-21T11:26:34.142Z"
    Client:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
          description: unique name of client / application
        email:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
    ResponseMessage:
      type: object
      properties:
        message:
          type: string
    NewAccount:
      type: object
      properties:
        walletAddress:
          type: string
          description: accounts's wallet address
          example: "0x23ff33sd8ace82c72f82c28e82addecf23795fc"
        profileHash:
          type: string
          description: hash of account's profile
          example: "282yg82gs3ed83h9nd93die93nd3ndemdudnndu3jdjd3ndeednu27d"
        timestamp:
          type: string
          description: timestamp showing when account was created
          example: "2018-11-21T11:26:34.142Z"
        accountType:
          type: string
          description: type of account
          example: Patient